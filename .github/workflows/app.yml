name: "App"

on:
  workflow_dispatch:
    branches:
      - main

  push:
    branches:
      - main
    paths:
      - 'APP/**'
      - '.github/workflows/app.yml'
      
env:
  REPO_NAME: example_python_flask
  REGISTRY_URL: 016431746308.dkr.ecr.us-east-1.amazonaws.com


jobs:
  lint:
    name: Lint Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
      
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.REPO_NAME }}
        IMAGE_TAG: ${{ github.ref }}
      run: |
        # Build a docker container and push it to ECR 
        pwd
        cd APP
        docker build -t ${{ env.REGISTRY_URL }}/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }} .
        echo "Pushing image to ECR..."
        docker push ${{ env.REGISTRY_URL }}/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}
        echo "::set-output name=image::${{ env.REGISTRY_URL }}/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}"
